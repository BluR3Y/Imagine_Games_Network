version: '3'
services:
  webserver:
    container_name: webserver
    build:
      dockerfile: Dockerfile
      context: ./webserver
    restart: always # because it is routing traffic to our entire app
    ports:
      - 80:80 # setting port because nginx is the single entrypoint for entire application
  
  client:
    container_name: client
    build:
      dockerfile: Dockerfile
      context: ./client
    restart: on-failure
    env_file: ./env/client/.env.test

  backend:
    container_name: backend
    depends_on:
      - mongo
      - redis
    build:
      dockerfile: Dockerfile
      context: ./backend
    restart: on-failure
    env_file:
      - ./env/backend/.env.test

  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - ./env/database/postgres/.env.test
    volumes:
      - ./database/postgres/init:/docker-entrypoint-initdb.d:ro

  redis:
    container_name: redis
    image: redis:latest
    env_file:
      - ./env/database/redis/.env.test
    volumes:
      - ./database/redis/init:/usr/local/etc/redis
    command: ["redis-server", "/usr/local/etc/redis/setup.sh"]

  scraper:
    container_name: scraper
    depends_on:
      - postgres
      - redis
    build:
      dockerfile: Dockerfile
      context: ./scraper
    restart: "no"
    env_file: ./env/scraper/.env.test

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    env_file:
      - ./env/localstack/.env.test
    volumes:
      - ./localstack/init:/etc/localstack/init/ready.d:ro
      - ./localstack/config:/tmp/localstack:ro