version: '3'
services:
  webserver:
    container_name: webserver
    build:
      dockerfile: Dockerfile
      context: ./webserver
    restart: always # because it is routing traffic to our entire app
    ports:
      - 80:80 # setting port because nginx is the single entrypoint for entire application
  
  client:
    container_name: client
    build:
      dockerfile: Dockerfile
      context: ./client
    restart: on-failure
    env_file: ./env/client/.env.test

  backend:
    container_name: backend
    depends_on:
      - mongo
      - redis
    build:
      dockerfile: Dockerfile
      context: ./backend
    restart: on-failure
    env_file:
      - ./env/backend/.env.test

  # mongo:
  #   container_name: mongo
  #   image: mongo:latest
  #   env_file:
  #     - ./env/database/mongo/.env.test
  #   volumes:
  #     - ./database/mongo/init:/docker-entrypoint-initdb.d:ro

  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - ./env/database/postgres/.env.test
    volumes:
      - ./database/postgres/init:/docker-entrypoint-initdb.d:ro

  # mysql:
  #   container_name: mysql
  #   image: mysql:latest
  #   env_file:
  #     - ./env/database/mysql/.env.test
  #   volumes:
  #     - ./database/mysql/init:/docker-entrypoint-initdb.d:ro

  # redis:
  #   container_name: redis
  #   image: redis:latest

  scrapy:
    container_name: scrapy
    depends_on:
      - mysql
    build:
      dockerfile: Dockerfile
      context: ./scrapy
    restart: "no"
    # env file